type Query {
  story(id: ID!): Story
  storyInviteLink(id: ID!): String!
  storyUsers(id: ID!): [String!]
  stories(creatorId: String, next: String, limit: Int!): [Story!]!
  storiesOnMap(lng: Float!, lat: Float!, radius: Float!): [Story!]!
  storyLive(creatorId: String): Story
  storyTracks(id: ID!, from: Int, to: Int): [Track!]!
}

type Mutation {
  storyCreate(text: String!, location: LocationInput, tracks: [ID!]!): Story!
  storyUpdate(id: ID!, text: String, location: LocationInput): Story!
  storyDelete(id: ID!): ID!
  storyUnlive(id: ID!): Story!
  storyPing(id: ID!): Boolean!
  storyCollabAddFromToken(id: ID!, token: String!): Boolean!
}

input LocationInput {
  lng: Float!
  lat: Float!
}

type Subscription {
  storyUpdated(id: ID!): Story!
  storyUsersUpdated(id: ID!): [String!]!
}

type Story {
  id: ID!
  text: String!
  image: String
  creatorId: ID!
  creator: User!
  createdAt: DateTime!
  isLive: Boolean!
  collaboratorIds: [String!]!
  onMap: Boolean
  trackTotal: Int!
}
